package com.tigres810.adventurermod.blocks.machines;

import java.util.Random;

import com.tigres810.adventurermod.Main;
import com.tigres810.adventurermod.blocks.BlockBase;
import com.tigres810.adventurermod.init.ModBlocks;

import net.minecraft.block.BlockHorizontal;
import net.minecraft.block.ITileEntityProvider;
import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.block.properties.PropertyBool;
import net.minecraft.block.properties.PropertyDirection;
import net.minecraft.block.state.IBlockState;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

public class TileEntityBase extends BlockBase implements ITileEntityProvider {

	public static final PropertyDirection FACING = BlockHorizontal.FACING;
	public static final PropertyBool GENERATING = PropertyBool.create("Generating");
	
	public TileEntityBase(String name, Material material) {
		super(name, material);
		setUnlocalizedName(name);
		setRegistryName(name);
		setCreativeTab(Main.adventurermodblockstab);
		
		//Block Meta
		if(name.equals("flux_generator_block")) {
			setSoundType(SoundType.METAL);
			setHardness(10.0f);
			setResistance(6.000f);
			
			this.setDefaultState(this.getDefaultState().withProperty(FACING, EnumFacing.NORTH).withProperty(GENERATING, false));
		}else if(name.equals("flux_pipe_block")) {
			setSoundType(SoundType.GLASS);
			setHardness(5.0f);
			setResistance(1.000f);
			setLightOpacity(1);
			
			this.setDefaultState(this.getDefaultState().withProperty(FACING, EnumFacing.NORTH));
		}
	}

	@Override
	public Item getItemDropped(IBlockState state, Random rand, int fortune) {
		
		return Item.getItemFromBlock(this);
	}
	
	@Override
	public ItemStack getItem(World worldIn, BlockPos pos, IBlockState state) {
		
		return new ItemStack(this);
	}
	
	@Override
	public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ) {
		if(!worldIn.isRemote) {
			if(this.getRegistryName().equals(ModBlocks.FLUX_GENERATOR_BLOCK.getRegistryName())) {
				
			}
		}
		
		return true;
	}
	
	@Override
	public void onBlockAdded(World worldIn, BlockPos pos, IBlockState state) {
		if(!worldIn.isRemote) {
			IBlockState north = worldIn.getBlockState(pos.north());
            IBlockState south = worldIn.getBlockState(pos.south());
            IBlockState west = worldIn.getBlockState(pos.west());
            IBlockState east = worldIn.getBlockState(pos.east());
            EnumFacing face = (EnumFacing)state.getValue(FACING);

            if (face == EnumFacing.NORTH && north.isFullBlock() && !south.isFullBlock()) face = EnumFacing.SOUTH;
            else if (face == EnumFacing.SOUTH && south.isFullBlock() && !north.isFullBlock()) face = EnumFacing.NORTH;
            else if (face == EnumFacing.WEST && west.isFullBlock() && !east.isFullBlock()) face = EnumFacing.EAST;
            else if (face == EnumFacing.EAST && east.isFullBlock() && !west.isFullBlock()) face = EnumFacing.WEST;
            worldIn.setBlockState(pos, state.withProperty(FACING, face), 2);
		}
	}

}
